#!/usr/bin/python3

from database import Database
import argparse

parser = argparse.ArgumentParser(description='Hilfsprogramm zum Export der Bot-Datenbank')
parser.add_argument('--verbose', '-v',
                    dest='verbose',
                    help='Output lots of stuff',
                    required=False,
                    default=0,
                    action='count')
parser.add_argument('--max-entries',
                    help='Maximale Anzahl von Einträgen, bevor die Tabelle aufgeteilt wird.',
                    required=False,
                    default=2000,)
args = parser.parse_args()

sql = Database('readonly', args.verbose)
sql.cursor.execute("""
    SELECT
        source,
        COUNT(source)
    FROM
        shortstore
    GROUP BY
        source
""")
sources = sql.cursor.fetchall()
sources_list = """  <ul class="flat">
   <li>Alle Quellen:</li>
   <li><a href="blacklist">Blacklist</a></li>
"""
for s in sources:
    sources_list += """   <li><a href="{}">{}</a></li>
""".format(s[0], s[0])
sources_list += """  </ul>"""
with open("doc/output/dumps/index.html", 'w') as dfl:
    print("""<?xml version="1.0" encoding="utf-8" standalone="no"?>
<html>
 <head>
  <meta charset="utf-8" />
  <link rel="stylesheet" type="text/css" href="/bot.css" />
  <link rel="shortcut icon" type="image/svg+xml" href="https://avatar.frankfurtium.de/ds100.svg" />
  <title>DS100-Daten-Dump Liste</title>
 </head>
 <body>
  <h1>Liste der Datenquellen:</h1>
{}
 </body>
</html>""".format(sources_list), file=dfl)
for row in sources:
    number_of_entries = int(row[1])
    print("Dumping source", row[0], "with", row[1], "entries")
    with open("doc/output/dumps/" + row[0] + ".html", 'w') as df:
        sql.cursor.execute("""
            SELECT
                Abk,
                Name
            FROM
                shortstore
            WHERE
                source = ?
        """, (row[0], )
        )
        print("""<?xml version="1.0" encoding="utf-8" standalone="no"?>
<html>
 <head>
  <meta charset="utf-8" />
  <link rel="stylesheet" type="text/css" href="/bot.css" />
  <link rel="shortcut icon" type="image/svg+xml" href="https://avatar.frankfurtium.de/ds100.svg" />
  <title>DS100-Daten-Dump {}</title>
 </head>
 <body>
  <h1>Daten aus Quelle {}</h1>
{}
  <hr/>
  <table class="dumptable">
   <tbody>""".format(row[0], row[0], sources_list), file=df)
        for entry_row in sql.cursor.fetchall():
            print("""    <tr>
     <th id="{}">{}</th>
     <td>{}</td>
    </tr>""".format(entry_row[0], entry_row[0], entry_row[1].replace('\\n', '<br/>')), file=df)
        print("""   </tbody>
  </table>
 </body>
</html>""", file=df)
print("Dumping blacklist")
with open("doc/output/dumps/blacklist.html", 'w') as blf:
    sql.cursor.execute("""
            SELECT
                blacklist.source || ':' || blacklist.Abk,
                shortstore.Kurzname
            FROM
                blacklist
            JOIN
                shortstore
            ON
                blacklist.source = shortstore.source
            AND
                blacklist.Abk = shortstore.Abk
        """)
    print("""<?xml version="1.0" encoding="utf-8" standalone="no"?>
<html>
 <head>
  <meta charset="utf-8" />
  <link rel="stylesheet" type="text/css" href="/bot.css" />
  <link rel="shortcut icon" type="image/svg+xml" href="https://avatar.frankfurtium.de/ds100.svg" />
  <title>DS100-Daten-Dump {}</title>
 </head>
 <body>
  <h1>Daten aus Quelle {}</h1>
{}
  <hr/>
  <p>Die folgenden Einträge werden nicht ohne Quellangabe ('#DS:')
  beantwortet:</p>
  <table class="dumptable">
   <tbody>""".format("Blacklist", "Blacklist", sources_list), file=blf)
    for entry_row in sql.cursor.fetchall():
        print("""    <tr>
     <th>{}</th>
     <td>{}</td>
    </tr>""".format(entry_row[0], entry_row[1].replace('\\n', '<br/>')), file=blf)
    print("""   </tbody>
  </table>
 </body>
</html>""", file=blf)
